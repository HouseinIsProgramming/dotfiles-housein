[
  {
    "bindings": {
      "cmd-1": ["pane::ActivateItem", 0],
      "cmd-2": ["pane::ActivateItem", 1],
      "cmd-3": ["pane::ActivateItem", 2],
      "cmd-4": ["pane::ActivateItem", 3],
      "cmd-5": ["pane::ActivateItem", 4],
      "cmd-6": ["pane::ActivateItem", 5],
      "cmd-7": ["pane::ActivateItem", 6],
      "cmd-8": ["pane::ActivateItem", 7],
      "cmd-9": ["pane::ActivateItem", 8],
      "cmd-0": "pane::ActivateLastItem",

      "cmd-e": "project_panel::ToggleFocus",
      "cmd-k": "workspace::ToggleZoom"
    }
  },
  {
    "context": "!Terminal && (vim_mode==normal || vim_mode==normal)|| KeyContextView || ProjectPanel",
    "bindings": {
      "space f p": "projects::OpenRecent",
      "cmd-alt-g": ["agent::NewExternalAgentThread", { "agent": "gemini" }],
      "space f g": "workspace::NewSearch",
      "space f f": "file_finder::Toggle",
      "space l s": "task::Spawn",
      "cmd-shift-r": "workspace::CloseAllDocks",
      // Pane resizing
      "ctrl-w =": "vim::ResetPaneSizes",
      "ctrl-w ctrl-h": "vim::ResizePaneLeft",
      "ctrl-w ctrl-l": "vim::ResizePaneRight",
      "ctrl-w ctrl-k": "vim::ResizePaneUp",
      "ctrl-w ctrl-j": "vim::ResizePaneDown",
      "ctrl-w ctrl-m": "editor::OpenContextMenu"
    }
  },
  {
    // ProjectPanel
    "context": "ProjectPanel && not_editing",
    "bindings": {
      // File operations
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "r": "project_panel::Rename",
      "d": "project_panel::Delete",
      "i": "project_panel::CollapseAllEntries",

      // Copy/paste operations
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",

      // Navigation
      "j": "menu::SelectNext",
      "k": "menu::SelectPrevious",
      "h": "project_panel::CollapseSelectedEntry",
      "l": "project_panel::ExpandSelectedEntry",
      "g g": "menu::SelectFirst",
      "shift-g": "menu::SelectLast",
      "-": "project_panel::SelectParent",

      // Opening files
      "enter": ["workspace::SendKeystrokes", "o shift-cmd-r"],
      "o": "project_panel::OpenPermanent",
      "t": "project_panel::OpenPermanent",
      "v": "project_panel::OpenPermanent",

      // Panel management
      "q": "workspace::ToggleLeftDock",
      "escape": "project_panel::ToggleFocus",

      // Other operations
      "/": "project_panel::NewSearchInDirectory",
      "ctrl-l ctrl-c": "project_panel::CollapseAllEntries",
      "ctrl-a": "pane::AlternateFile"
    }
  },
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      // AI Assistant
      "space a a": "agent::ToggleFocus",
      "space a i": "agent::NewThread",
      "space a e": "assistant::InlineAssist",
      "space a t": "workspace::ToggleRightDock",
      "cmd-l": "assistant::InlineAssist",

      // File management

      // Buffer management
      "space b b": "pane::AlternateFile",
      "space b d": "pane::CloseActiveItem",
      "space b n": "workspace::NewFile",
      "space m m": "vim::ToggleMarksView",
      "space m a": "pane::TogglePinTab",
      "space ,": "tab_switcher::Toggle",
      "] b": "pane::ActivateNextItem",
      "[ b": "pane::ActivatePreviousItem",

      // Tab switching
      "space 1": ["pane::ActivateItem", 0],
      "space 2": ["pane::ActivateItem", 1],
      "space 3": ["pane::ActivateItem", 2],
      "space 4": ["pane::ActivateItem", 3],
      "space 5": ["pane::ActivateItem", 4],
      "space 6": ["pane::ActivateItem", 5],
      "space 7": ["pane::ActivateItem", 6],
      "space 8": ["pane::ActivateItem", 7],
      "space 9": ["pane::ActivateItem", 8],

      // Search operations
      "space f w": "vim::Search",
      "space f d": "diagnostics::Deploy",
      "space f s": "outline::Toggle",
      "space f S": "project_symbols::Toggle",

      // Git operations
      "space g g": [
        "task::Spawn",
        {
          "task_name": "start lazygit",
          "reveal_target": "center"
        }
      ],
      "space g b": "git::Blame",
      "space g d ": "editor::ExpandAllDiffHunks",
      "space g D": "git::Diff",
      "space g h r": "git::Restore",
      "space g h R": "git::RestoreFile",

      // Code actions & LSP
      "space l a": "editor::ToggleCodeActions",
      "space l f": "editor::Format",

      // UI toggles
      "space u i": "editor::ToggleInlayHints",
      "space u w": "editor::ToggleSoftWrap",
      "space u c": "workspace::ToggleCenteredLayout",

      // Markdown
      "space m p": "markdown::OpenPreview",
      "space m P": "markdown::OpenPreviewToTheSide",

      // Navigation - hunks
      "] h": "editor::GoToHunk",
      "[ h": "editor::GoToPreviousHunk",
      "] c": "editor::GoToHunk",
      "[ c": "editor::GoToPreviousHunk",

      // Navigation - diagnostics
      "] d": "editor::GoToDiagnostic",
      "[ d": "editor::GoToPreviousDiagnostic",
      "] e": "editor::GoToDiagnostic",
      "[ e": "editor::GoToPreviousDiagnostic",

      // Navigation - quickfix list (vim-unimpaired style)
      "] q": "editor::MoveToStartOfNextExcerpt",
      "[ q": "editor::MoveToStartOfExcerpt",

      // Navigation - location list
      "] l": "editor::GoToHunk",
      "[ l": "editor::GoToPreviousHunk",

      // Add empty lines
      "] space": "vim::NextMethodStart",
      "[ space": "vim::PreviousMethodStart"

      // File manager
    }
  },
  {
    "context": "Editor && (vim_mode == normal || vim_mode == helix_normal)",
    "bindings": {
      "space f b": ["tab_switcher::Toggle", {}],
      "space q e": "editor::ReloadFile",

      "space g s": "vim::PushAddSurrounds",
      "space g d": "vim::PushDeleteSurrounds",
      // LSP bindings
      "g r n": "editor::Rename",
      "g r r": "editor::FindAllReferences",
      "g r i": "editor::GoToImplementation",
      "space q q": "pane::CloseActiveItem",
      "space i": [
        "task::Spawn",
        {
          "task_name": "start yazi",
          "reveal_target": "center"
        }
      ]
    }
  },
  {
    "context": "Editor && (vim_mode == insert || vim_mode==helix_insert) && !menu",
    "bindings": {
      "ctrl-l": "editor::ShowCompletions",
      "ctrl-a": "editor::MoveLeft",
      "ctrl-m": "editor::ConfirmCompletion",
      "ctrl-i": "editor::AcceptEditPrediction",
      "ctrl-a ctrl-w": "editor::AcceptPartialEditPrediction",
      "ctrl-s": "editor::ShowSignatureHelp",
      "k j": "vim::SwitchToNormalMode"
    }
  },
  {
    "context": "Editor && (vim_mode == insert || vim_mode == helix_insert) && menu",
    "bindings": {
      "ctrl-m": "editor::ConfirmCompletion"
    }
  },
  {
    "context": "vim_mode == visual || vim_mode == helix_visual",
    "bindings": {
      "shift-j": "editor::MoveLineDown",
      "shift-k": "editor::MoveLineUp"
    }
  },
  {
    "context": "VimControl && !menu",
    "bindings": {
      // Centered scrolling
      "ctrl-d": ["workspace::SendKeystrokes", "ctrl-d z z"],
      "ctrl-u": ["workspace::SendKeystrokes", "ctrl-u z z"],
      "n": ["workspace::SendKeystrokes", "n z z z "],
      "shift-n": ["workspace::SendKeystrokes", "shift-n z z z"],
      "shift-g": ["workspace::SendKeystrokes", "shift-g z z"]
    }
  },
  {
    "context": "vim_operator == a || vim_operator == i || vim_operator == cs",
    "bindings": {
      "b": "vim::MiniBrackets",
      "q": "vim::MiniQuotes",
      "c": "vim::CurlyBrackets",
      "t": "vim::AngleBrackets"
    }
  }, // ============================================================================
  // VIM MOTION MODES (NORMAL/VISUAL)
  // ============================================================================
  {
    "context": "vim_mode == normal || vim_mode == visual || vim_mode == helix_visual || vim_mode == normal ",
    "bindings": {
      "s": "vim::PushSneak",
      "S": "vim::PushSneakBackward"
    }
  },
  {
    "bindings": {
      "ctrl-k": "command_palette::Toggle"
    }
  },
  {
    "context": "((vim_mode == helix_normal || vim_mode == helix_select) && !menu)",
    "bindings": {
      "space k": null
    }
  },
  {
    "context": "((vim_mode == helix_normal || vim_mode == helix_select) && !menu)",
    "bindings": {
      "space shift-s": null
    }
  },
  {
    "context": "(Editor && mode == full)",
    "bindings": {
      "cmd-r": null
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "cmd-shift-r": null
    }
  }
]
